{"version":3,"file":"ModelScene.js","sourceRoot":"","sources":["../../src/three-components/ModelScene.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Box3, Color, DirectionalLight, HemisphereLight, Mesh, MeshBasicMaterial, Object3D, PerspectiveCamera, Scene, SphereBufferGeometry, Vector3} from 'three';\n\nimport {resolveDpr} from '../utilities.js';\n\nimport Model from './Model.js';\nimport StaticShadow from './StaticShadow.js';\n\nexport const IlluminationRole = {\n  Primary: 'primary',\n  Secondary: 'secondary'\n};\n\n// The model is sized to the room, and if too perfect of a fit,\n// the front of the model becomes clipped by the near plane. Rather than\n// change the near plane or camera's position (if we wanted to implement a\n// visible \"room\" in the future where framing needs to be precise), we shrink\n// the room by a little bit so it's always slightly bigger than the model.\n// TODO(#527): this description has been incorrect for awhile (this is not\n// how the near plane is set) so this should probably be removed for simplicity.\nexport const ROOM_PADDING_SCALE = 1.01;\n\nconst AMBIENT_LIGHT_LOW_INTENSITY = 0.0;\nconst DIRECTIONAL_LIGHT_LOW_INTENSITY = 2.0;\n\nconst AMBIENT_LIGHT_HIGH_INTENSITY = 3.0;\nconst DIRECTIONAL_LIGHT_HIGH_INTENSITY = 4.0;\n\nconst $paused = Symbol('paused');\nconst $modelAlignmentMask = Symbol('modelAlignmentMask');\n\n/**\n * A THREE.Scene object that takes a Model and CanvasHTMLElement and\n * constructs a framed scene based off of the canvas dimensions.\n * Provides lights and cameras to be used in a renderer.\n */\nexport default class ModelScene extends Scene {\n  /**\n   * @param {ModelViewerElementBase} options.element\n   * @param {CanvasHTMLElement} options.canvas\n   * @param {number} options.width\n   * @param {number} options.height\n   * @param {THREE.WebGLRenderer} options.renderer\n   */\n  constructor({canvas, element, width, height, renderer}) {\n    super();\n\n    this.name = 'ModelScene';\n\n    this.onModelLoad = this.onModelLoad.bind(this);\n    this[$paused] = false;\n\n    this.element = element;\n    this.canvas = canvas;\n    this.context = canvas.getContext('2d');\n    this.renderer = renderer;\n    this.exposure = 1;\n    this[$modelAlignmentMask] = new Vector3(1, 1, 1);\n\n    this.model = new Model();\n    this.shadow = new StaticShadow();\n    this.light =\n        new HemisphereLight(0xBBBBBB, 0x444444, AMBIENT_LIGHT_HIGH_INTENSITY);\n    this.light.name = 'HemisphereLight';\n    this.light.position.set(2, 4, 2);\n\n    // This light is only for generating (fake) shadows\n    // and does not needed to be added to the scene.\n    // @see StaticShadow.js\n    this.shadowLight =\n        new DirectionalLight(0xffffff, DIRECTIONAL_LIGHT_HIGH_INTENSITY);\n    this.shadowLight.position.set(0, 10, 0);\n    this.shadowLight.name = 'ShadowLight';\n\n    // These default camera values are never used, as they are reset once the\n    // model is loaded and framing is computed.\n    this.camera = new PerspectiveCamera(45, this.aspect, 0.1, 100);\n    this.camera.name = 'MainCamera';\n\n    this.activeCamera = this.camera;\n    this.pivot = new Object3D();\n    this.pivot.name = 'Pivot';\n\n    this.add(this.pivot);\n    this.add(this.light);\n    this.add(this.shadowLight);\n    this.pivot.add(this.model);\n\n    this.isVisible = false;\n    this.isDirty = false;\n\n    // See description of updateFraming() below for a description of these\n    // variables.\n    this.framedHeight = 1;\n    this.modelDepth = 1;\n    this.setSize(width, height);\n\n    this.background = new Color(0xffffff);\n\n    this.model.addEventListener('model-load', this.onModelLoad);\n  }\n\n  get paused() {\n    return this[$paused];\n  }\n\n  pause() {\n    this[$paused] = true;\n  }\n\n  resume() {\n    this[$paused] = false;\n  }\n\n  /**\n   * Sets the model via URL.\n   *\n   * @param {String?} source\n   * @param {Function?} progressCallback\n   */\n  async setModelSource(source, progressCallback) {\n    try {\n      await this.model.setSource(source, progressCallback);\n    } catch (e) {\n      throw new Error(\n          `Could not set model source to '${source}': ${e.message}`);\n    }\n  }\n\n  /**\n   * Configures the alignment of the model within the frame based on value\n   * \"masks\". By default, the model will be aligned so that the center of its\n   * bounding box volume is in the center of the frame on all axes. In order to\n   * center the model this way, the model is translated by the delta between\n   * the world center of the bounding volume and world center of the frame.\n   *\n   * The alignment mask allows this translation to be scaled or eliminated\n   * completely for each of the three axes. So, setModelAlignment(1, 1, 1) will\n   * center the model in the frame. setModelAlignment(0, 0, 0) will align the\n   * model so that its root node origin is at [0, 0, 0] in the scene.\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} z\n   */\n  setModelAlignmentMask(...alignmentMaskValues) {\n    this[$modelAlignmentMask].set(...alignmentMaskValues);\n    this.alignModel();\n    this.isDirty = true;\n  }\n\n  /**\n   * Receives the size of the 2D canvas element to make according\n   * adjustments in the scene.\n   *\n   * @param {number} width\n   * @param {number} height\n   */\n  setSize(width, height) {\n    if (width !== this.width || height !== this.height) {\n      this.width = Math.max(width, 1);\n      this.height = Math.max(height, 1);\n      // In practice, invocations of setSize are throttled at the element level,\n      // so no need to throttle here:\n      this.updateFraming();\n    }\n  }\n\n  /**\n   * To frame the scene, a box is fit around the model such that the X and Z\n   * dimensions (modelDepth) are the same (for Y-rotation) and the X/Y ratio is\n   * the aspect ratio of the canvas (framedHeight is the Y dimension). At the\n   * ideal distance, the camera's fov exactly covers the front face of this box\n   * when looking down the Z-axis.\n   */\n  updateFraming() {\n    const dpr = resolveDpr();\n    this.canvas.width = this.width * dpr;\n    this.canvas.height = this.height * dpr;\n    this.canvas.style.width = `${this.width}px`;\n    this.canvas.style.height = `${this.height}px`;\n    this.aspect = this.width / this.height;\n\n    const modelSize = this.model.size;\n    if (modelSize.x != 0 || modelSize.y != 0 || modelSize.z != 0) {\n      this.framedHeight = ROOM_PADDING_SCALE *\n          Math.max(\n              modelSize.y,\n              modelSize.x / this.aspect,\n              modelSize.z / this.aspect);\n      this.modelDepth = ROOM_PADDING_SCALE * Math.max(modelSize.x, modelSize.z);\n    }\n  }\n\n  configureStageLighting(intensityScale, illuminationRole) {\n    this.light.intensity = intensityScale *\n        (illuminationRole === IlluminationRole.Primary ?\n             AMBIENT_LIGHT_HIGH_INTENSITY :\n             AMBIENT_LIGHT_LOW_INTENSITY);\n    this.shadowLight.intensity = intensityScale *\n        (illuminationRole === IlluminationRole.Primary ?\n             DIRECTIONAL_LIGHT_HIGH_INTENSITY :\n             DIRECTIONAL_LIGHT_LOW_INTENSITY);\n    this.isDirty = true;\n  }\n\n  /**\n   * Returns the size of the corresponding canvas element.\n   * @return {Object}\n   */\n  getSize() {\n    return {width: this.width, height: this.height};\n  }\n\n  /**\n   * Moves the model to be centered at the origin, taking into account\n   * setModelAlignmentMask(), described above.\n   */\n  alignModel() {\n    if (!this.model.hasModel() || this.model.size.length() === 0) {\n      return;\n    }\n\n    this.resetModelPose();\n\n    const modelCenter = this.model.boundingBox.getCenter(new Vector3());\n    this.model.position.copy(modelCenter)\n        .multiply(this[$modelAlignmentMask])\n        .multiplyScalar(-1);\n  }\n\n  resetModelPose() {\n    this.model.position.set(0, 0, 0);\n    this.model.rotation.set(0, 0, 0);\n    this.model.scale.set(1, 1, 1);\n  }\n\n  /**\n   * Returns the current camera.\n   * @return {THREE.PerspectiveCamera}\n   */\n  getCamera() {\n    return this.activeCamera;\n  }\n\n  /**\n   * Sets the passed in camera to be used for rendering.\n   * @param {THREE.Camera}\n   */\n  setCamera(camera) {\n    this.activeCamera = camera;\n  }\n\n  /**\n   * Called when the model's contents have loaded, or changed.\n   */\n  onModelLoad(event) {\n    this.updateFraming();\n    this.alignModel();\n    this.updateStaticShadow();\n    this.dispatchEvent({type: 'model-load', url: event.url});\n  }\n\n  /**\n   * Called to update the shadow rendering when the room or model changes.\n   */\n  updateStaticShadow() {\n    if (!this.model.hasModel() || this.model.size.length() === 0) {\n      this.pivot.remove(this.shadow);\n      return;\n    }\n\n    // Remove and cache the current pivot rotation so that the shadow's\n    // capture is unrotated so it can be freely rotated when applied\n    // as a texture.\n    const currentRotation = this.pivot.rotation.y;\n    this.pivot.rotation.y = 0;\n\n    this.shadow.position.set(0, 0, 0);\n    this.shadow.scale.x = this.model.size.x;\n    this.shadow.scale.z = this.model.size.z;\n\n    this.shadow.render(this.renderer.renderer, this, this.shadowLight);\n\n    // Lazily add the shadow so we're only displaying it once it has\n    // a generated texture.\n    this.pivot.add(this.shadow);\n    this.pivot.rotation.y = currentRotation;\n\n    // This should be ultimately user-configurable,\n    // but for now, move the shadow to the bottom of the model.\n    this.shadow.position.y = -this.model.size.y / 2;\n  }\n}\n"]}